openapi: 3.1.0
info:
  title: HydraFlow Actions API
  description: >
    HydraFlow is an adaptive conversational assistant API for context management, query parsing,
    dynamic sub-persona creation, memory compression, log summarization, and context recapping.
  version: 1.2.0
servers:
  - url: https://hydra-flow.vercel.app/api
    description: Deployed API server

components:
  responses:
    ServerError:
      description: Server error while processing the request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error details.

paths:
  /parse-query:
    post:
      operationId: parseQuery
      summary: Parse a query into actionable keywords and tasks
      description: Parses user-provided query to extract keywords and actionable tasks.
      requestBody:
        description: User query to parse
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: The query input that needs parsing.
              example:
                query: "Summarize the logs and create a sub-persona."
      responses:
        '200':
          description: Successfully parsed query
          content:
            application/json:
              schema:
                type: object
                properties:
                  keywords:
                    type: array
                    items:
                      type: string
                    description: Keywords extracted from the query.
                  actionItems:
                    type: array
                    items:
                      type: string
                    description: Actionable tasks identified from the query.
                  taskCard:
                    type: object
                    description: Structured task card generated from the query.
                  example:
                    keywords: ["summarize", "logs", "create"]
                    actionItems: ["summarize-logs", "create-subpersona"]
                    taskCard:
                      goal: "Summarize logs and create sub-persona."
                      priority: "High"
                      subtasks:
                        - task: "summarize-logs"
                          status: "pending"
                        - task: "create-subpersona"
                          status: "pending"
        '400':
          description: Invalid input, query missing or malformed.
        '500':
          $ref: '#/components/responses/ServerError'

  /create-subpersona:
    post:
      operationId: createSubpersona
      summary: Create a specialized sub-persona
      description: Dynamically generates a specialized sub-persona for a specified task.
      requestBody:
        description: Details for sub-persona creation
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - task
                - description
              properties:
                task:
                  type: string
                  description: The specific task the sub-persona will handle.
                description:
                  type: string
                  description: A detailed description of the sub-persona's role.
              example:
                task: "log analysis"
                description: "Summarize logs for patterns and errors."
      responses:
        '200':
          description: Successfully created a sub-persona
          content:
            application/json:
              schema:
                type: object
                properties:
                  subPersonaName:
                    type: string
                    description: Name assigned to the newly created sub-persona.
                  status:
                    type: string
                    description: The status of the sub-persona creation process.
                  example:
                    subPersonaName: "loganalysis_1693084567000"
                    status: "active"
        '400':
          description: Missing task or description fields.
        '500':
          $ref: '#/components/responses/ServerError'

  /compress-memory:
    post:
      operationId: compressMemory
      summary: Compress and optimize memory
      description: Compresses lengthy conversation memory for optimized context management.
      requestBody:
        description: Full memory content to compress
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - memory
              properties:
                memory:
                  type: string
                  description: The full conversation memory to be compressed.
              example:
                memory: "This is a very long conversation memory that needs to be compressed."
      responses:
        '200':
          description: Successfully compressed the memory
          content:
            application/json:
              schema:
                type: object
                properties:
                  compressedMemory:
                    type: string
                    description: The compressed version of the memory.
                  example:
                    compressedMemory: "Summary of memory."
        '400':
          description: Memory input missing or invalid.
        '500':
          $ref: '#/components/responses/ServerError'

  /feedback/all:
    get:
      operationId: getAllFeedback
      summary: Retrieve all feedback entries
      description: Fetches all collected feedback with details.
      responses:
        '200':
          description: Successfully retrieved all feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        responseId:
                          type: string
                        userFeedback:
                          type: string
                        rating:
                          type: number
                        timestamp:
                          type: string
                      example:
                        responseId: "response_12345"
                        userFeedback: "Great response!"
                        rating: 5
                        timestamp: "2023-09-01T12:34:56Z"
        '500':
          $ref: '#/components/responses/ServerError'
