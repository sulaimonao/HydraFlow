openapi: 3.1.0
info:
  title: HydraFlow Actions API
  description: >
    HydraFlow is an adaptive conversational assistant API for context management, query parsing,
    dynamic sub-persona creation, memory compression, log summarization, and context recapping.
  version: 1.2.0
servers:
  - url: https://hydra-flow.vercel.app/api
    description: Deployed API server

components:
  schemas:
    ParseQueryResponse:
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
          description: Keywords extracted from the query.
        actionItems:
          type: array
          items:
            type: string
          description: Actionable tasks identified from the query.
        taskCard:
          type: object
          properties:
            goal:
              type: string
              description: Goal of the task.
            priority:
              type: string
              description: Task priority (e.g., High, Medium).
            subtasks:
              type: array
              items:
                type: object
                properties:
                  task:
                    type: string
                    description: Subtask description.
                  status:
                    type: string
                    description: Subtask status (e.g., pending, completed).

    FeedbackEntry:
      type: object
      properties:
        responseId:
          type: string
          description: Response ID associated with the feedback.
        userFeedback:
          type: string
          description: Feedback text provided by the user.
        rating:
          type: integer
          description: Rating given by the user (1-5).
        timestamp:
          type: string
          format: date-time
          description: Time of feedback submission.

    FeedbackSummary:
      type: object
      properties:
        totalFeedback:
          type: integer
          description: Total number of feedback entries.
        averageRating:
          type: number
          description: Average rating from all feedback entries.
        feedbackEntries:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackEntry'

    LogSummary:
      type: object
      properties:
        totalEntries:
          type: integer
          description: Total number of log entries analyzed.
        errorCount:
          type: integer
          description: Number of error-like patterns detected.
        firstFiveLines:
          type: string
          description: The first five lines of the log for a quick overview.

    ServerErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.

  responses:
    ServerError:
      description: Server error while processing the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerErrorResponse'

paths:
  /parse-query:
    post:
      operationId: parseQuery
      summary: Parse a query into actionable keywords and tasks
      description: Parses user-provided query to extract keywords and actionable tasks.
      requestBody:
        description: User query to parse.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: The query input that needs parsing.
      responses:
        '200':
          description: Successfully parsed query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParseQueryResponse'
        '400':
          description: Invalid input; query missing or malformed.
        '500':
          $ref: '#/components/responses/ServerError'

  /create-subpersona:
    post:
      operationId: createSubpersona
      summary: Create a specialized sub-persona
      description: Dynamically generates a specialized sub-persona for a specified task.
      requestBody:
        description: Details for sub-persona creation.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - task
                - description
              properties:
                task:
                  type: string
                  description: The specific task the sub-persona will handle.
                description:
                  type: string
                  description: A detailed description of the sub-persona's role.
      responses:
        '200':
          description: Successfully created a sub-persona.
          content:
            application/json:
              schema:
                type: object
                properties:
                  subPersonaName:
                    type: string
                    description: Name assigned to the newly created sub-persona.
                  status:
                    type: string
                    description: The status of the sub-persona creation process.
        '400':
          description: Missing task or description fields.
        '500':
          $ref: '#/components/responses/ServerError'

  /compress-memory:
    post:
      operationId: compressMemory
      summary: Compress and optimize memory
      description: Compresses lengthy conversation memory for optimized context management.
      requestBody:
        description: Full memory content to compress.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - memory
              properties:
                memory:
                  type: string
                  description: The full conversation memory to be compressed.
      responses:
        '200':
          description: Successfully compressed memory.
          content:
            application/json:
              schema:
                type: object
                properties:
                  compressedMemory:
                    type: string
                    description: Compressed memory summary.
        '400':
          description: Missing or invalid memory input.
        '500':
          $ref: '#/components/responses/ServerError'

  /summarize-logs:
    post:
      operationId: summarizeLogs
      summary: Summarize logs for patterns and errors
      description: Analyzes log data to generate summaries of key patterns and errors.
      requestBody:
        description: Log data to summarize.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - logs
              properties:
                logs:
                  type: string
                  description: Log data to analyze and summarize.
      responses:
        '200':
          description: Successfully summarized logs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSummary'
        '400':
          description: Missing or invalid log data.
        '500':
          $ref: '#/components/responses/ServerError'

  /feedback/summary:
    get:
      operationId: getFeedbackSummary
      summary: Retrieve feedback summary
      description: Fetches a summarized view of all feedback, including totals and averages.
      responses:
        '200':
          description: Successfully retrieved feedback summary.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackSummary'
        '500':
          $ref: '#/components/responses/ServerError'
